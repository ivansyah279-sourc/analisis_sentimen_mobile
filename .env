import 'package:sentimen_mobile/app/modules/index/controllers/index_controller.dart';
import 'package:sentimen_mobile/app/routes/app_pages.dart';
import 'package:sentimen_mobile/config/environment/environment.dart';
import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';
import 'package:latlong2/latlong.dart';

class IndexView extends GetView<IndexController> {
  const IndexView({super.key});

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        if (controller.showUserTooltip.value ||
            controller.showCheckinTooltip.value ||
            controller.showUserAndCheckinTooltip.value) {
          controller.showUserTooltip.value = false;
          controller.showCheckinTooltip.value = false;
          controller.showUserAndCheckinTooltip.value = false;
        }
      },
      child: WillPopScope(
        onWillPop: () async {
          Get.dialog(
            AlertDialog(
              content: const Text('Apakah Anda yakin ingin keluar?'),
              actions: [
                TextButton(
                  onPressed: () {
                    Get.back(); // Tutup dialog
                  },
                  child: const Text(
                    'Batal',
                    style: TextStyle(fontSize: 14, color: Colors.red),
                  ),
                ),
                TextButton(
                  onPressed: () {
                    controller.signout();
                  },
                  child: const Text(
                    'Ok',
                    style: TextStyle(fontSize: 14, color: Colors.black),
                  ),
                ),
              ],
            ),
            barrierDismissible: false,
          );
          return false;
        },
        child: GetBuilder<IndexController>(
          init: IndexController(),
          builder: (c) {
            c.loadUserInfo();
            return _buildWidget(context);
          },
        ),
      ),
    );
  }

  Widget _buildWidget(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          color: Color(0xFFF6F6E9),
        ),
        child: SafeArea(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Bagian header yang tetap statis
              const SizedBox(height: 50),
              Padding(
                padding: const EdgeInsets.all(20.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Image.asset(
                      Environment.technolab, // Sesuaikan path logo Anda
                      width: 150,
                    ),
                    const SizedBox(height: 20),
                    const Text(
                      'Employee Attendance',
                      style: TextStyle(
                        fontSize: 30,
                        fontWeight: FontWeight.bold,
                        color: Colors.black,
                      ),
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 80),

              // Bagian konten yang dapat di-scroll
              Expanded(
                child: SingleChildScrollView(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Padding(
                        padding: EdgeInsets.symmetric(horizontal: 20.0),
                        child: Text(
                          'Hallo, Huda!',
                          style: TextStyle(
                            fontSize: 24,
                            fontWeight: FontWeight.bold,
                            color: Colors.black,
                          ),
                        ),
                      ),
                      const SizedBox(height: 20),
                      Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 20.0),
                        child: Obx(() => Text(
                              '${DateFormat('EEEE, d MMMM yyyy').format(DateTime.now())} ${controller.currentTime.value}',
                              style: const TextStyle(
                                fontSize: 16,
                                color: Colors.black,
                              ),
                            )),
                      ),
                      const SizedBox(height: 20),
                      Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 20.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Obx(() => _buildGradientButton(
                                  text: controller.isCheckedIn.value
                                      ? 'Check-Out'
                                      : 'Check-In',
                                  gradientColors: controller.isCheckedIn.value
                                      ? [
                                          const Color(0xFFB71C1C),
                                          const Color(0xFFD32F2F)
                                        ] // Warna merah untuk check-out
                                      : [
                                          const Color(0xFF004D40),
                                          const Color(0xFF26A69A)
                                        ], // Warna teal untuk check-in
                                  onPressed: () {
                                    DateTime now = DateTime.now();
                                    if (controller.isCheckedIn.value) {
                                      // Logika untuk check-out
                                      if (now.hour >= 9) {
                                        controller
                                            .checkOut(); // Reset status setelah check-out
                                      } else {
                                        // Dialog check-out sebelum jam 17:00
                                        Get.dialog(
                                          AlertDialog(
                                            title: const Center(
                                              child: Text(
                                                "Warning !!",
                                                style: TextStyle(
                                                    fontSize: 20,
                                                    color: Colors.red),
                                              ),
                                            ),
                                            content: const Text(
                                              "You cannot check out before 17:00.",
                                              style: TextStyle(fontSize: 15),
                                            ),
                                            actions: [
                                              Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment.end,
                                                children: [
                                                  ElevatedButton(
                                                    style: ElevatedButton
                                                        .styleFrom(
                                                      shape:
                                                          RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(8),
                                                      ),
                                                      padding:
                                                          const EdgeInsets.all(
                                                              0),
                                                    ),
                                                    onPressed: () {
                                                      Get.back();
                                                    },
                                                    child: Ink(
                                                      decoration: BoxDecoration(
                                                        gradient:
                                                            const LinearGradient(
                                                          colors: [
                                                            Color(0xFF002171),
                                                            Color(0xFF1565C0)
                                                          ],
                                                          begin: Alignment
                                                              .bottomCenter,
                                                          end: Alignment
                                                              .topCenter,
                                                        ),
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(8),
                                                      ),
                                                      child: Container(
                                                        constraints:
                                                            const BoxConstraints(
                                                          minWidth: 80,
                                                          minHeight: 40,
                                                        ),
                                                        alignment:
                                                            Alignment.center,
                                                        child: const Text(
                                                          'OK',
                                                          style: TextStyle(
                                                            color: Colors.white,
                                                            fontSize: 14,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ],
                                          ),
                                          barrierDismissible: false,
                                        );
                                      }
                                    } else {
                                      // Logika untuk check-in
                                      if (now.hour > 8 ||
                                          (now.hour == 8 && now.minute > 30)) {
                                        // Jika waktu lebih dari 08:30
                                        Get.dialog(
                                          AlertDialog(
                                            title: const Center(
                                              child: Text(
                                                "Late Check-In",
                                                style: TextStyle(
                                                    fontSize: 20,
                                                    color: Colors.orange),
                                              ),
                                            ),
                                            content: const Text(
                                              "You are late for check-in, but your check-in will be recorded.",
                                              style: TextStyle(fontSize: 15),
                                            ),
                                            actions: [
                                              Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment.end,
                                                children: [
                                                  ElevatedButton(
                                                    style: ElevatedButton
                                                        .styleFrom(
                                                      shape:
                                                          RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(8),
                                                      ),
                                                      padding:
                                                          const EdgeInsets.all(
                                                              0),
                                                    ),
                                                    onPressed: () {
                                                      Get.back(); // Tutup dialog
                                                      controller
                                                          .checkIn(); // Lanjutkan proses check-in
                                                    },
                                                    child: Ink(
                                                      decoration: BoxDecoration(
                                                        gradient:
                                                            const LinearGradient(
                                                          colors: [
                                                            Color(0xFF6A1B9A),
                                                            Color(0xFF8E24AA)
                                                          ],
                                                          begin: Alignment
                                                              .bottomCenter,
                                                          end: Alignment
                                                              .topCenter,
                                                        ),
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(8),
                                                      ),
                                                      child: Container(
                                                        constraints:
                                                            const BoxConstraints(
                                                          minWidth: 80,
                                                          minHeight: 40,
                                                        ),
                                                        alignment:
                                                            Alignment.center,
                                                        child: const Text(
                                                          'OK',
                                                          style: TextStyle(
                                                            color: Colors.white,
                                                            fontSize: 14,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ],
                                          ),
                                          barrierDismissible: false,
                                        );
                                      } else {
                                        // Jika check-in tepat waktu
                                        controller.checkIn();
                                      }
                                    }
                                  },
                                )),
                            _buildGradientButton(
                              text: 'Temporary Leave',
                              gradientColors: [
                                const Color(0xFF757575),
                                const Color(0xFFBDBDBD)
                              ],
                              onPressed: () {
                                Get.toNamed(Routes.TEMPORARY_LEAVE);
                              },
                            ),
                          ],
                        ),
                      ),
                      const SizedBox(height: 30),
                      Align(
                        alignment: Alignment.bottomCenter,
                        child: Padding(
                          padding: const EdgeInsets.only(bottom: 20.0),
                          child: Obx(() {
                            return Padding(
                              padding: const EdgeInsets.only(
                                  left: 20.0, right: 20.0),
                              child: Container(
                                height: 220,
                                width: 350,
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(20.0),
                                  boxShadow: [
                                    BoxShadow(
                                      color: Theme.of(context).brightness ==
                                              Brightness.light
                                          ? Colors.grey.shade300
                                          : Colors.black45,
                                      spreadRadius: 0.0,
                                      blurRadius: 10,
                                      offset: const Offset(3.0, 3.0),
                                    ),
                                    BoxShadow(
                                      color: Theme.of(context).brightness ==
                                              Brightness.light
                                          ? Colors.grey.shade400
                                          : Colors.black38,
                                      spreadRadius: 0.0,
                                      blurRadius: 5,
                                      offset: const Offset(3.0, 3.0),
                                    ),
                                    BoxShadow(
                                      color: Theme.of(context).brightness ==
                                              Brightness.light
                                          ? Colors.white
                                          : Colors.black54,
                                      spreadRadius: 2.0,
                                      blurRadius: 10,
                                      offset: const Offset(-3.0, -3.0),
                                    ),
                                    BoxShadow(
                                      color: Theme.of(context).brightness ==
                                              Brightness.light
                                          ? Colors.white
                                          : Colors.black45,
                                      spreadRadius: 2.0,
                                      blurRadius: 5,
                                      offset: const Offset(-3.0, -3.0),
                                    ),
                                  ],
                                ),
                                child: Stack(
                                  children: [
                                    ClipRRect(
                                      borderRadius: BorderRadius.circular(20.0),
                                      child: FlutterMap(
                                        mapController: controller.mapController,
                                        options: MapOptions(
                                          initialCenter: LatLng(
                                              controller.userLat.value,
                                              controller.userLon.value),
                                          initialZoom: 15.0,
                                        ),
                                        children: [
                                          TileLayer(
                                            urlTemplate:
                                                'https://tile.openstreetmap.org/{z}/{x}/{y}.png',
                                            userAgentPackageName:
                                                'com.example.app',
                                          ),
                                          MarkerLayer(
                                            markers: [
                                              Marker(
                                                point: LatLng(
                                                    controller.userLat.value,
                                                    controller.userLon.value),
                                                width: 20,
                                                height: 20,
                                                child: Container(
                                                  decoration: BoxDecoration(
                                                    shape: BoxShape.circle,
                                                    color: Colors.blue,
                                                    border: Border.all(
                                                      color: Colors.white,
                                                      width: 3,
                                                    ),
                                                  ),
                                                ),
                                              ),
                                              if (controller
                                                  .isLocationMatched.value)
                                                Marker(
                                                  point: LatLng(
                                                      controller
                                                          .checkinLatHardcoded
                                                          .value,
                                                      controller
                                                          .checkinLonHardcoded
                                                          .value),
                                                  width: 20,
                                                  height: 20,
                                                  child: Container(
                                                    decoration: BoxDecoration(
                                                      shape: BoxShape.circle,
                                                      color: Colors.red,
                                                      border: Border.all(
                                                        color: Colors.white,
                                                        width: 3,
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                            ],
                                          ),
                                          if (controller
                                              .isLocationMatched.value)
                                            CircleLayer(
                                              circles: [
                                                CircleMarker(
                                                  point: LatLng(
                                                    (controller.userLat.value +
                                                            controller
                                                                .checkinLatHardcoded
                                                                .value) /
                                                        2,
                                                    (controller.userLon.value +
                                                            controller
                                                                .checkinLonHardcoded
                                                                .value) /
                                                        2,
                                                  ),
                                                  color: Colors.green
                                                      .withOpacity(0.3),
                                                  radius: (controller
                                                              .checkinDistance
                                                              .value >
                                                          0)
                                                      ? controller
                                                          .checkinDistance.value
                                                      : (controller
                                                          .checkOutDistance
                                                          .value),
                                                ),
                                              ],
                                            ),
                                        ],
                                      ),
                                    ),
                                    Positioned(
                                      bottom: 15,
                                      right: 15,
                                      child: Column(
                                        children: [
                                          Stack(
                                            clipBehavior: Clip.none,
                                            children: [
                                              Container(
                                                width: 40,
                                                height: 40,
                                                decoration: BoxDecoration(
                                                  color: Colors.white,
                                                  borderRadius:
                                                      BorderRadius.circular(
                                                          20.0),
                                                  boxShadow: [
                                                    BoxShadow(
                                                      color: Colors.grey
                                                          .withOpacity(0.3),
                                                      spreadRadius: 2,
                                                      blurRadius: 6,
                                                      offset:
                                                          const Offset(0, 3),
                                                    ),
                                                  ],
                                                ),
                                                child: ClipRRect(
                                                  borderRadius:
                                                      BorderRadius.circular(28),
                                                  child: Material(
                                                    color: Colors.transparent,
                                                    child: InkWell(
                                                      onTap: () {
                                                        controller
                                                            .showCheckinTooltip
                                                            .value = false;
                                                        controller
                                                            .showUserAndCheckinTooltip
                                                            .value = false;
                                                        controller
                                                                .showUserTooltip
                                                                .value =
                                                            !controller
                                                                .showUserTooltip
                                                                .value;
                                                        controller.mapController
                                                            .move(
                                                          LatLng(
                                                              controller.userLat
                                                                  .value,
                                                              controller.userLon
                                                                  .value),
                                                          18.0,
                                                        );
                                                      },
                                                      child: const Center(
                                                        child: Icon(
                                                          Icons.accessibility,
                                                          color: Colors.black,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                              if (controller
                                                  .showUserTooltip.value)
                                                Positioned(
                                                  left: -112,
                                                  bottom: 25,
                                                  child: Container(
                                                    width: 100,
                                                    margin:
                                                        const EdgeInsets.only(
                                                            left: 8.0),
                                                    padding:
                                                        const EdgeInsets.all(
                                                            8.0),
                                                    decoration: BoxDecoration(
                                                      color: Colors.black,
                                                      borderRadius:
                                                          const BorderRadius
                                                              .only(
                                                        topLeft:
                                                            Radius.circular(
                                                                8.0),
                                                        topRight:
                                                            Radius.circular(
                                                                8.0),
                                                        bottomLeft:
                                                            Radius.circular(
                                                                8.0),
                                                        bottomRight:
                                                            Radius.circular(
                                                                0.0),
                                                      ),
                                                      boxShadow: [
                                                        BoxShadow(
                                                          color: Colors.grey
                                                              .withOpacity(0.5),
                                                          spreadRadius: 2,
                                                          blurRadius: 6,
                                                          offset: const Offset(
                                                              0, 3),
                                                        ),
                                                      ],
                                                    ),
                                                    child: const Text(
                                                      "Lokasi Anda",
                                                      style: TextStyle(
                                                          color: Colors.white),
                                                      textAlign:
                                                          TextAlign.center,
                                                    ),
                                                  ),
                                                ),
                                            ],
                                          ),
                                          const SizedBox(height: 10),
                                          Obx(() {
                                            if (controller
                                                .isLocationMatched.value) {
                                              return Column(
                                                children: [
                                                  Stack(
                                                    clipBehavior: Clip.none,
                                                    children: [
                                                      Container(
                                                        width: 40,
                                                        height: 40,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: Colors.white,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      20.0),
                                                          boxShadow: [
                                                            BoxShadow(
                                                              color: Colors.grey
                                                                  .withOpacity(
                                                                      0.3),
                                                              spreadRadius: 2,
                                                              blurRadius: 6,
                                                              offset:
                                                                  const Offset(
                                                                      0, 3),
                                                            ),
                                                          ],
                                                        ),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(28),
                                                          child: Material(
                                                            color: Colors
                                                                .transparent,
                                                            child: InkWell(
                                                              onTap: () {
                                                                controller
                                                                    .showCheckinTooltip
                                                                    .value = false;
                                                                controller
                                                                    .showUserTooltip
                                                                    .value = false;
                                                                controller
                                                                        .showUserAndCheckinTooltip
                                                                        .value =
                                                                    !controller
                                                                        .showUserAndCheckinTooltip
                                                                        .value;
                                                                controller
                                                                    .mapController
                                                                    .move(
                                                                  LatLng(
                                                                    (controller.userLat.value +
                                                                            controller.checkinLatHardcoded.value) /
                                                                        2,
                                                                    (controller.userLon.value +
                                                                            controller.checkinLonHardcoded.value) /
                                                                        2,
                                                                  ),
                                                                  17.0,
                                                                );
                                                              },
                                                              child:
                                                                  const Center(
                                                                child: Icon(
                                                                  Icons
                                                                      .my_location,
                                                                  color: Colors
                                                                      .black,
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                      if (controller
                                                          .showUserAndCheckinTooltip
                                                          .value)
                                                        Positioned(
                                                          left: -162,
                                                          bottom: 25,
                                                          child: Container(
                                                            width: 150,
                                                            margin:
                                                                const EdgeInsets
                                                                    .only(
                                                                    left: 8.0),
                                                            padding:
                                                                const EdgeInsets
                                                                    .all(8.0),
                                                            decoration:
                                                                BoxDecoration(
                                                              color:
                                                                  Colors.black,
                                                              borderRadius:
                                                                  const BorderRadius
                                                                      .only(
                                                                topLeft: Radius
                                                                    .circular(
                                                                        8.0),
                                                                topRight: Radius
                                                                    .circular(
                                                                        8.0),
                                                                bottomLeft: Radius
                                                                    .circular(
                                                                        8.0),
                                                                bottomRight: Radius
                                                                    .circular(
                                                                        0.0),
                                                              ),
                                                              boxShadow: [
                                                                BoxShadow(
                                                                  color: Colors
                                                                      .grey
                                                                      .withOpacity(
                                                                          0.5),
                                                                  spreadRadius:
                                                                      2,
                                                                  blurRadius: 6,
                                                                  offset:
                                                                      const Offset(
                                                                          0, 3),
                                                                ),
                                                              ],
                                                            ),
                                                            child: const Text(
                                                              "Jarak Anda dengan\nLokasi Check In",
                                                              style: TextStyle(
                                                                  color: Colors
                                                                      .white),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                            ),
                                                          ),
                                                        ),
                                                    ],
                                                  ),
                                                  const SizedBox(height: 10),
                                                  Stack(
                                                    clipBehavior: Clip.none,
                                                    children: [
                                                      Container(
                                                        width: 40,
                                                        height: 40,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: Colors.white,
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      20.0),
                                                          boxShadow: [
                                                            BoxShadow(
                                                              color: Colors.grey
                                                                  .withOpacity(
                                                                      0.3),
                                                              spreadRadius: 2,
                                                              blurRadius: 6,
                                                              offset:
                                                                  const Offset(
                                                                      0, 3),
                                                            ),
                                                          ],
                                                        ),
                                                        child: ClipRRect(
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(28),
                                                          child: Material(
                                                            color: Colors
                                                                .transparent,
                                                            child: InkWell(
                                                              onTap: () {
                                                                controller
                                                                    .showUserAndCheckinTooltip
                                                                    .value = false;
                                                                controller
                                                                    .showUserTooltip
                                                                    .value = false;
                                                                controller
                                                                        .showCheckinTooltip
                                                                        .value =
                                                                    !controller
                                                                        .showCheckinTooltip
                                                                        .value;
                                                                controller
                                                                    .mapController
                                                                    .move(
                                                                  LatLng(
                                                                      controller
                                                                          .checkinLatHardcoded
                                                                          .value,
                                                                      controller
                                                                          .checkinLonHardcoded
                                                                          .value),
                                                                  15.0,
                                                                );
                                                              },
                                                              child:
                                                                  const Center(
                                                                child: Icon(
                                                                  Icons
                                                                      .location_on,
                                                                  color: Colors
                                                                      .black,
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                      if (controller
                                                          .showCheckinTooltip
                                                          .value)
                                                        Positioned(
                                                          left: -122,
                                                          bottom: 25,
                                                          child: Container(
                                                            width: 110,
                                                            margin:
                                                                const EdgeInsets
                                                                    .only(
                                                                    left: 8.0),
                                                            padding:
                                                                const EdgeInsets
                                                                    .all(8.0),
                                                            decoration:
                                                                BoxDecoration(
                                                              color:
                                                                  Colors.black,
                                                              borderRadius:
                                                                  const BorderRadius
                                                                      .only(
                                                                topLeft: Radius
                                                                    .circular(
                                                                        8.0),
                                                                topRight: Radius
                                                                    .circular(
                                                                        8.0),
                                                                bottomLeft: Radius
                                                                    .circular(
                                                                        8.0),
                                                                bottomRight: Radius
                                                                    .circular(
                                                                        0.0),
                                                              ),
                                                              boxShadow: [
                                                                BoxShadow(
                                                                  color: Colors
                                                                      .grey
                                                                      .withOpacity(
                                                                          0.5),
                                                                  spreadRadius:
                                                                      2,
                                                                  blurRadius: 6,
                                                                  offset:
                                                                      const Offset(
                                                                          0, 3),
                                                                ),
                                                              ],
                                                            ),
                                                            child: const Text(
                                                              "Lokasi Check In",
                                                              style: TextStyle(
                                                                  color: Colors
                                                                      .white),
                                                              textAlign:
                                                                  TextAlign
                                                                      .center,
                                                            ),
                                                          ),
                                                        ),
                                                    ],
                                                  ),
                                                ],
                                              );
                                            } else {
                                              return const SizedBox.shrink();
                                            }
                                          }),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            );
                          }),
                        ),
                      ),
                      const SizedBox(height: 20),
                      const Padding(
                        padding: EdgeInsets.symmetric(horizontal: 20.0),
                        child: Text(
                          'History In-Out',
                          style: TextStyle(
                            fontSize: 18,
                            fontWeight: FontWeight.bold,
                            color: Colors.black,
                          ),
                        ),
                      ),
                      const SizedBox(height: 8),
                      Padding(
                        padding: const EdgeInsets.all(20.0),
                        child: Obx(() {
                          return SizedBox(
                            height:
                                200, // Menambah tinggi agar Card tidak terpotong
                            child: ListView.builder(
                              scrollDirection: Axis.vertical,
                              itemCount: controller.attendanceRecords.length,
                              itemBuilder: (context, index) {
                                final record =
                                    controller.attendanceRecords[index];
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 8.0),
                                  child: Card(
                                    elevation: 3,
                                    shape: RoundedRectangleBorder(
                                      borderRadius: BorderRadius.circular(8),
                                    ),
                                    child: Container(
                                      width: 150,
                                      padding: const EdgeInsets.symmetric(
                                          vertical: 16,
                                          horizontal:
                                              16), // Menyesuaikan padding
                                      child: Column(
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Pukul ${record.time}',
                                            style: const TextStyle(
                                              fontSize: 14,
                                              fontWeight: FontWeight.bold,
                                            ),
                                          ),
                                          const SizedBox(height: 4),
                                          Text(
                                            record.type,
                                            style: const TextStyle(
                                              fontSize: 12,
                                              color: Colors.grey,
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                );
                              },
                            ),
                          );
                        }),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildGradientButton({
    required String text,
    required List<Color> gradientColors,
    required VoidCallback onPressed,
  }) {
    return SizedBox(
      height: 50,
      width: 150,
      child: ElevatedButton(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8),
          ),
          padding: const EdgeInsets.all(0),
        ),
        onPressed: onPressed,
        child: Ink(
          decoration: BoxDecoration(
            gradient: LinearGradient(
              colors: gradientColors,
              begin: Alignment.bottomCenter,
              end: Alignment.topCenter,
            ),
            borderRadius: BorderRadius.circular(8),
          ),
          child: Container(
            constraints: const BoxConstraints(minWidth: 180, minHeight: 40),
            alignment: Alignment.center,
            child: Text(
              text,
              style: const TextStyle(
                color: Colors.white,
                fontSize: 15,
              ),
            ),
          ),
        ),
      ),
    );
  }
}




Text(
                                      "Fullname: ${controller.employeeData['fullname']}"),
                                ],
                              ),
                              Text(
                                  "Position: ${controller.employeeData['position']}"),
                              Text(
                                  "No. Telephone: ${controller.employeeData['phone']}"),
                              Text(
                                  "Company: ${controller.employeeData['company']}"),
                              Text("PIN: ${controller.employeeData['pin']}"),





import 'package:sentimen_mobile/app/data/models/history.dart';
import 'package:sentimen_mobile/app/modules/index/controllers/index_controller.dart';
import 'package:sentimen_mobile/app/routes/app_pages.dart';
import 'package:sentimen_mobile/config/environment/environment.dart';
import 'package:sentimen_mobile/utils/neumorphic.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';

class IndexView extends GetView<IndexController> {
  const IndexView({super.key});

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        if (controller.showUserTooltip.value ||
            controller.showCheckinTooltip.value ||
            controller.showUserAndCheckinTooltip.value) {
          controller.showUserTooltip.value = false;
          controller.showCheckinTooltip.value = false;
          controller.showUserAndCheckinTooltip.value = false;
        }
      },
      child: WillPopScope(
        onWillPop: () async {
          Get.dialog(
            AlertDialog(
              content: const Text('Apakah Anda yakin ingin keluar?'),
              actions: [
                TextButton(
                  onPressed: () {
                    Get.back(); // Tutup dialog
                  },
                  child: const Text(
                    'Batal',
                    style: TextStyle(fontSize: 14, color: Colors.red),
                  ),
                ),
                TextButton(
                  onPressed: () {
                    controller.signout();
                  },
                  child: const Text(
                    'Ok',
                    style: TextStyle(fontSize: 14, color: Colors.black),
                  ),
                ),
              ],
            ),
            barrierDismissible: false,
          );
          return false;
        },
        child: GetBuilder<IndexController>(
          init: IndexController(),
          builder: (c) {
            c.loadUserInfo();
            return _buildWidget(context);
          },
        ),
      ),
    );
  }

  Widget _buildWidget(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF6F6E9),
      appBar: AppBar(
        backgroundColor: const Color(0xFFF6F6E9),
        elevation: 0,
        title: Image.asset(
          Environment.technolab,
          width: 55,
          height: 30,
        ),
        automaticallyImplyLeading: false,
        centerTitle: false,
        actions: const [
          Padding(
            padding: EdgeInsets.only(right: 16.0),
            child: Center(
              child: Text(
                'PT. Techno Multi Utama',
                style: TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Colors.black),
              ),
            ),
          ),
        ],
      ),
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Container(
                height: 150,
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [
                      Colors.amber[700]!,
                      Colors.blue[800]!,
                      Colors.red[600]!,
                    ],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                    stops: const [0.1, 0.4, 0.8],
                  ),
                  boxShadow: [
                    BoxShadow(
                      color: Theme.of(context).brightness == Brightness.light
                          ? Colors.grey.shade800
                          : Colors.black38,
                      spreadRadius: 0.0,
                      blurRadius: 10,
                      offset: const Offset(3.0, 3.0),
                    ),
                    BoxShadow(
                      color: Theme.of(context).brightness == Brightness.light
                          ? Colors.grey.shade800
                          : Colors.black38,
                      spreadRadius: 0.0,
                      blurRadius: 5,
                      offset: const Offset(3.0, 3.0),
                    ),
                    BoxShadow(
                      color: Theme.of(context).brightness == Brightness.light
                          ? Colors.white
                          : Colors.black38,
                      spreadRadius: 2.0,
                      blurRadius: 10,
                      offset: const Offset(-3.0, -3.0),
                    ),
                    BoxShadow(
                      color: Theme.of(context).brightness == Brightness.light
                          ? Colors.white
                          : Colors.black38,
                      spreadRadius: 2.0,
                      blurRadius: 5,
                      offset: const Offset(-3.0, -3.0),
                    ),
                  ],
                  borderRadius: BorderRadius.circular(20),
                ),
                child: Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Row(
                    children: [
                      const Expanded(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              'Huda Nasnur Tajali',
                              style: TextStyle(
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                                color: Colors.white,
                              ),
                            ),
                            SizedBox(height: 4),
                            Text(
                              '1009281928',
                              style:
                                  TextStyle(fontSize: 16, color: Colors.white),
                            ),
                            SizedBox(height: 4),
                            Text(
                              'ICT / Programmer',
                              style:
                                  TextStyle(fontSize: 16, color: Colors.white),
                            ),
                          ],
                        ),
                      ),
                      InkWell(
                        onTap: () {},
                        child: const CircleAvatar(
                          backgroundColor: Colors.transparent,
                          radius: 35,
                          backgroundImage:
                              AssetImage("assets/images/profile1.png"),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(height: 40),
              Center(
                child: NeumorphicCustom(
                  onPressed: () async {
                    await controller.fetchAndValidateUserPosition();
                    await Get.toNamed(Routes.CHECKIN);
                  },
                  color: Colors.amber[600]!,
                  width: double.infinity,
                  height: 50,
                  buttonText: 'Check In',
                ),
              ),
              const SizedBox(height: 20),
              const Text(
                'History',
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
              Align(
                alignment: Alignment.centerRight,
                child: TextButton(
                  onPressed: () {
                    // Add functionality for View All
                  },
                  child: const Text(
                    'View All',
                    style: TextStyle(fontSize: 16, color: Colors.blue),
                  ),
                ),
              ),
              const SizedBox(height: 8),
              Expanded(
                child: ListView(
                  children: const [
                    HistoryCard(
                      location: '-6.8832684, 107.5578223',
                      dateTime: '15 Januari 2025 08:00',
                      note: 'Kerja Dirumah, Trouble CBA',
                    ),
                    HistoryCard(
                      location: '-6.958616435436699, 107.60981820755784',
                      dateTime: '15 Januari 2025 10:00',
                      note: 'Sudah Dikantor',
                    ),
                    HistoryCard(
                      location: '-6.149480317688436, 106.85121856756885',
                      dateTime: '15 Januari 2025 10:00',
                      note: 'Sudah Dikantor',
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}





SafeArea(
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Stack(
                children: [
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Container(
                        width: double.infinity,
                        padding: const EdgeInsets.all(16.0),
                        decoration: const BoxDecoration(
                          color: Color(0xFFDB5B00),
                          borderRadius: BorderRadius.only(
                            topLeft: Radius.circular(8.0),
                            topRight: Radius.circular(8.0),
                          ),
                        ),
                        child: const Center(
                          child: Text(
                            "Today's Check-In",
                            style: TextStyle(
                              fontSize: 18,
                              fontWeight: FontWeight.bold,
                              color: Colors.white,
                            ),
                          ),
                        ),
                      ),
                      Container(
                        width: double.infinity,
                        padding: const EdgeInsets.all(16.0),
                        decoration: const BoxDecoration(
                          color: Color(0xFFD9D9D9),
                          borderRadius: BorderRadius.only(
                            bottomLeft: Radius.circular(8.0),
                            bottomRight: Radius.circular(8.0),
                          ),
                          boxShadow: [
                            BoxShadow(
                              color: Colors.black12,
                              blurRadius: 4,
                              offset: Offset(0, 2),
                            ),
                          ],
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            const Center(
                              child: Text(
                                'Monday, 12 Jan 2025',
                                style: TextStyle(
                                  fontSize: 16,
                                  color: Color(0xFFBB1010),
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                            const SizedBox(height: 16),
                            SizedBox(
                              height: 300,
                              child: Obx(() {
                                if (controller.checkInData.isEmpty) {
                                  return const Center(
                                    child: Text(
                                      'Data check-in tidak tersedia.',
                                      style: TextStyle(
                                        fontSize: 16,
                                        color: Colors.black54,
                                      ),
                                    ),
                                  );
                                }
                                return SingleChildScrollView(
                                  child: Column(
                                    children:
                                        controller.checkInData.map((data) {
                                      return Padding(
                                        padding: const EdgeInsets.symmetric(
                                            vertical: 8.0),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            GestureDetector(
                                              onTap: () => showDetailDialog(
                                                  context, data),
                                              child: Text(
                                                data['time']!,
                                                style: const TextStyle(
                                                  fontSize: 33,
                                                  fontWeight: FontWeight.bold,
                                                  color: Colors.black,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(width: 20),
                                            Expanded(
                                              child: GestureDetector(
                                                onTap: () async {
                                                  await openMap(
                                                      data['location']!);
                                                },
                                                child: FutureBuilder<String>(
                                                  future: controller
                                                                  .resolvedLocations[
                                                              data[
                                                                  'location']] !=
                                                          null
                                                      ? Future.value(controller
                                                              .resolvedLocations[
                                                          data['location']])
                                                      : getLocationCoordinate(
                                                              data['location']!)
                                                          .then((locationName) {
                                                          controller.resolvedLocations[
                                                                  data[
                                                                      'location']!] =
                                                              locationName;
                                                          return locationName;
                                                        }),
                                                  builder: (context, snapshot) {
                                                    if (snapshot
                                                            .connectionState ==
                                                        ConnectionState
                                                            .waiting) {
                                                      return const Center(
                                                        child:
                                                            CircularProgressIndicator(),
                                                      );
                                                    } else if (snapshot
                                                        .hasError) {
                                                      String errorMessage;
                                                      if (snapshot.error
                                                          .toString()
                                                          .contains(
                                                              'SocketException')) {
                                                        errorMessage =
                                                            'Koneksi gagal. Periksa jaringan Anda.';
                                                      } else {
                                                        errorMessage =
                                                            'Terjadi kesalahan. Coba lagi nanti.';
                                                      }
                                                      return Text(
                                                        errorMessage,
                                                        style: const TextStyle(
                                                          color: Colors.red,
                                                          fontSize: 14,
                                                        ),
                                                      );
                                                    }
                                                    return Text(
                                                      snapshot.data!,
                                                      style: const TextStyle(
                                                        fontSize: 16,
                                                        color: Colors.black,
                                                      ),
                                                    );
                                                  },
                                                ),
                                              ),
                                            )
                                          ],
                                        ),
                                      );
                                    }).toList(),
                                  ),
                                );
                              }),
                            ),
                            const SizedBox(height: 20),
                            const Text(
                              'Check-In Terakhir',
                              style: TextStyle(
                                fontSize: 16,
                                fontWeight: FontWeight.bold,
                                color: Color(0xFFBB1010),
                              ),
                            ),
                            const SizedBox(height: 10),
                            Obx(() {
                              if (controller.lastCheckIn.isEmpty) {
                                return const Center(
                                  child: Text(
                                    'Data check-in terakhir tidak tersedia.',
                                    style: TextStyle(
                                      fontSize: 16,
                                      color: Colors.black54,
                                    ),
                                  ),
                                );
                              }
                              return Column(
                                children: controller.lastCheckIn.map((data) {
                                  return Padding(
                                    padding: const EdgeInsets.symmetric(
                                        vertical: 8.0),
                                    child: FutureBuilder<String>(
                                      future: controller.resolvedLocations[
                                                  data['location']] !=
                                              null
                                          ? Future.value(
                                              controller.resolvedLocations[
                                                  data['location']])
                                          : getLocationCoordinate(
                                                  data['location']!)
                                              .then((locationName) {
                                              controller.resolvedLocations[
                                                      data['location']!] =
                                                  locationName;
                                              return locationName;
                                            }),
                                      builder: (context, snapshot) {
                                        if (snapshot.connectionState ==
                                            ConnectionState.waiting) {
                                          return const Center(
                                            child: CircularProgressIndicator(),
                                          );
                                        } else if (snapshot.hasError) {
                                          String errorMessage;
                                          if (snapshot.error
                                              .toString()
                                              .contains('SocketException')) {
                                            errorMessage =
                                                'Koneksi gagal. Periksa jaringan Anda.';
                                          } else {
                                            errorMessage =
                                                'Terjadi kesalahan. Coba lagi nanti.';
                                          }
                                          return Text(
                                            errorMessage,
                                            style: const TextStyle(
                                              color: Colors.red,
                                              fontSize: 14,
                                            ),
                                          );
                                        }
                                        return Column(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            GestureDetector(
                                              onTap: () => showDetailDialog(
                                                  context, data),
                                              child: Text(
                                                data['time']!,
                                                style: const TextStyle(
                                                  fontSize: 33,
                                                  fontWeight: FontWeight.bold,
                                                  color: Colors.black,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(height: 4),
                                            GestureDetector(
                                              onTap: () async {
                                                await openMap(
                                                    data['location']!);
                                              },
                                              child: Text(
                                                snapshot.data!,
                                                style: const TextStyle(
                                                  fontSize: 16,
                                                  color: Colors.black,
                                                ),
                                              ),
                                            ),
                                          ],
                                        );
                                      },
                                    ),
                                  );
                                }).toList(),
                              );
                            }),
                          ],
                        ),
                      ),
                      const SizedBox(height: 40),
                      SizedBox(
                        height: 50,
                        child: ElevatedButton(
                          style: ElevatedButton.styleFrom(
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(
                                  8), // Adjust border radius as needed
                            ),
                            padding: const EdgeInsets.all(0), // No padding
                          ),
                          onPressed: () async {
                            await checkController
                                .fetchAndValidateUserPosition();
                            await Get.toNamed(Routes.CHECKIN);
                          },
                          child: Ink(
                            decoration: BoxDecoration(
                              color: const Color(0xFF246DC7),
                              // gradient: const LinearGradient(
                              //   colors: [
                              //     Color(0xFF002171),
                              //     Color(0xFF1565C0),
                              //   ],
                              //   begin: Alignment.bottomCenter,
                              //   end: Alignment.topCenter,
                              // ),
                              borderRadius: BorderRadius.circular(
                                  8), // Adjust border radius as needed
                            ),
                            child: Container(
                              constraints: const BoxConstraints(
                                  minWidth: 180,
                                  minHeight: 40), // Set min width and height
                              alignment: Alignment.center,
                              child: const Text(
                                'CHECK IN',
                                style: TextStyle(
                                  color:
                                      Colors.white, // Set text color to white
                                  fontSize: 14, // Adjust font size as needed
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                  // Ikon menimpa Container
                  Positioned(
                    right: 8,
                    bottom: 75,
                    child: GestureDetector(
                      onTap: () {
                        // Aksi untuk ikon
                      },
                      child: Container(
                        width: 60,
                        height: 60,
                        decoration: BoxDecoration(
                          color: Colors.amber[300],
                          shape: BoxShape.circle,
                          boxShadow: const [
                            BoxShadow(
                              color: Colors.black26,
                              blurRadius: 6,
                              offset: Offset(0, 3),
                            ),
                          ],
                        ),
                        child: const Icon(
                          Icons.history,
                          color: Colors.black,
                          size: 35,
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),



          import 'package:sentimen_mobile/app/modules/index/controllers/index_controller.dart';
import 'package:flutter/material.dart';
import 'package:sentimen_mobile/utils/open_maps.dart';
import 'package:get/get.dart';

class HistoryCard extends StatelessWidget {
  final IndexController checkController = Get.find<IndexController>();
  final String location; // Format: "latitude,longitude"
  final String dateTime;
  final String note;

  HistoryCard({
    Key? key,
    required this.location,
    required this.dateTime,
    required this.note,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<String>(
      future: getLocationCoordinate(location),
      builder: (context, snapshot) {
        final displayLocation = snapshot.connectionState == ConnectionState.done
            ? (snapshot.data ?? 'Unknown Location')
            : 'Loading...';

        return GestureDetector(
          onTap: () => openMap(location),
          child: Container(
            margin: const EdgeInsets.all(12.0),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(15),
              boxShadow: [
                BoxShadow(
                  color: Colors.grey[500]!,
                  offset: const Offset(4, 4),
                  blurRadius: 5,
                  spreadRadius: 1,
                ),
                const BoxShadow(
                  color: Colors.white,
                  offset: Offset(-4, -2),
                  blurRadius: 8,
                  spreadRadius: 1,
                ),
              ],
            ),
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    dateTime,
                    style: const TextStyle(fontSize: 16, color: Colors.grey),
                  ),
                  const SizedBox(height: 8),
                  Text.rich(
                    TextSpan(
                      children: [
                        TextSpan(
                          text: displayLocation,
                          style: const TextStyle(
                            fontSize: 16,
                            fontWeight: FontWeight.normal,
                            color: Colors.black,
                          ),
                        ),
                      ],
                    ),
                    maxLines: 2, // Batas maksimal satu baris
                    overflow: TextOverflow
                        .ellipsis, // Tambahkan elipsis jika teks terlalu panjang
                  ),
                  // RichText(
                  //   text: TextSpan(
                  //     children: [
                  //       // const TextSpan(
                  //       //   text: 'Location: ',
                  //       //   style: TextStyle(
                  //       //     fontSize: 16,
                  //       //     fontWeight: FontWeight.bold,
                  //       //     color: Colors.black,
                  //       //   ),
                  //       // ),
                  //       TextSpan(
                  //         text: displayLocation,
                  //         style: const TextStyle(
                  //           fontSize: 16,
                  //           fontWeight: FontWeight.normal,
                  //           color: Colors.black,
                  //         ),
                  //       ),
                  //     ],
                  //   ),
                  // ),
                  const SizedBox(height: 8),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Text(
                        'Keterangan:',
                        style: TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                          color: Colors.black,
                        ),
                      ),
                      const SizedBox(height: 4),
                      Text(
                        note,
                        style: const TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.normal,
                          color: Colors.black,
                        ),
                      ),
                    ],
                  ),
                  // RichText(
                  //   text: TextSpan(
                  //     children: [
                  //       const TextSpan(
                  //         text: 'Note: ',
                  //         style: TextStyle(
                  //           fontSize: 16,
                  //           fontWeight: FontWeight.bold,
                  //           color: Colors.black,
                  //         ),
                  //       ),
                  //       TextSpan(
                  //         text: note,
                  //         style: const TextStyle(
                  //           fontSize: 16,
                  //           fontWeight: FontWeight.normal,
                  //           color: Colors.black,
                  //         ),
                  //       ),
                  //     ],
                  //   ),
                  // ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }
}


// return Dismissible(
                  //   key: Key(item.id ?? item.checkin.toIso8601String()),
                  //   direction: DismissDirection.endToStart,
                  //   background: Container(
                  //     alignment: Alignment.centerRight,
                  //     color: Colors.red,
                  //     padding: const EdgeInsets.only(right: 20),
                  //     child: const Icon(Icons.delete, color: Colors.white),
                  //   ),
                  //   onDismissed: (_) => controller.deleteHistory(index),
                  //   child: HistoryAttendance(
                  //     id: item.id,
                  //     location: item.location,
                  //     checkin: item.checkin,
                  //     note: item.note,
                  //   ),
                  // );

